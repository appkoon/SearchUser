ext.deps = [:]
def versions = [:]
versions.junit = "4.12"
versions.atsl_runner = "1.0.2"
versions.atsl_rules = "1.0.2"
versions.mockito = "2.7.19"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.22.0"
versions.android_gradle_plugin = "3.1.3"
versions.kotlin = "1.2.71"
versions.support = "27.1.1"
versions.constraint_layout = "1.1.3"
versions.lifecycle = "1.1.1"
versions.room = "1.1.1"
versions.rxjava2 = "2.1.3"
versions.rxjava2_adapter = "2.3.0"
versions.rx_android = "2.0.1"
versions.rx_binding = "2.2.0"
versions.dagger = "2.16"
versions.retrofit = "2.3.0"
versions.retrofit_adapter = "2.0.2"
versions.gson = "2.8.2"
versions.okhttp_logging_interceptor = "3.9.0"
versions.databinding = "3.1.3"
versions.fresco = "1.10.0"

def deps = [:]
deps.junit = "junit:junit:$versions.junit"

def atsl = [:]
atsl.runner = "com.android.support.test:runner:$versions.atsl_runner"
atsl.rules = "com.android.support.test:rules:$versions.atsl_rules"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin

def support = [:]
support.appcompat = "com.android.support:appcompat-v7:$versions.support"
support.v4 = "com.android.support:support-v4:$versions.support"
support.design = "com.android.support:design:$versions.support"
support.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
support.cardview = "com.android.support:cardview-v7:$versions.support"
support.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
deps.support = support

def room = [:]
room.runtime = "android.arch.persistence.room:runtime:$versions.room"
room.compiler = "android.arch.persistence.room:compiler:$versions.room"
room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
room.testing = "android.arch.persistence.room:testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
lifecycle.testing = "android.arch.core:core-testing:$versions.lifecycle"
deps.lifecycle = lifecycle

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.adapter = "com.squareup.retrofit2:adapter-rxjava:$versions.retrofit_adapter"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_logging_interceptor"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rxjava2_adapter = "com.squareup.retrofit2:adapter-rxjava2:$versions.rxjava2_adapter"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.rx_binding = "com.jakewharton.rxbinding2:rxbinding:$versions.rx_binding"

deps.databinding = "com.android.databinding:compiler:$versions.databinding"

deps.fresco = "com.facebook.fresco:fresco:$versions.fresco"

ext.deps = deps

def addRepository(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}
ext.addRepository = this.&addRepository